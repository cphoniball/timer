version: "3"

services:

  # Hackaround to bring up only dependencies so you can run phoenix and webpack locally
  # User like docker-compose up -d deps
  deps:
    image: tianon/true
    depends_on:
      - nginx-proxy
      - db
      - db-test

 # Proxies requests to the different containers so we can use real-ish hostnames while developing
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./docker/nginx/api.timer.test.conf:/etc/nginx/conf.d/api.timer.test.conf
      - ./docker/nginx/client.timer.test.conf:/etc/nginx/conf.d/client.timer.test.conf
    networks:
      - application

  client:
    image: node:latest
    working_dir: /app
    entrypoint: ./entrypoint.sh
    ports:
      - "7000:7000"
    networks:
      - application
    environment:
      NODE_ENV: "development"
      VIRTUAL_HOST: "client.timer.test"
      VIRTUAL_PORT: 7000
    volumes:
      - ./apps/client:/app

  phoenix:
    build:
      context: ./docker/phoenix
    entrypoint: /app/entrypoint.sh
    environment:
      VIRTUAL_HOST: api.timer.test
      VIRTUAL_PORT: 4000
    ports:
      - "4000:4000"
    networks:
      - application
    volumes:
      - ./apps/api:/app
    working_dir: /app

  db:
    image: postgres:9
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: timer
    ports:
      - "6432:5432"
    networks:
      - application
    volumes:
      - /var/lib/postgresql/data

  db-test:
    image: postgres:9
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: postgres
      POSTGRES_DB: timer-test
    ports:
      - "7432:5432"
    networks:
      - application

networks:
  application:
